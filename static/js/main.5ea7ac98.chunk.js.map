{"version":3,"sources":["Components/HomePage.js","Components/Room.js","Components/AddRoom.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","del","index","onClickRoom","RoomName","RoomKind","RoomColor","Products","state","className","to","onClick","this","style","backgroundColor","Component","Room","validSelect","element","setState","selectProduct","target","value","addItem","Display","Display2","styleBtn","add","AddRoomS","map","i","display","outline","onChange","AddRoom","validRoomName","validRoomColor","validRoomKind","create","placeholder","App","roomOnClick","delRoom","delBtn","filter","ele","ind","newRoom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ea7ac98.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    del = () => {\r\n        this.props.del(this.props.index);\r\n    }\r\n\r\n    onClickRoom = () =>{\r\n        this.props.onClickRoom(this.props.index,this.props.RoomName,this.props.RoomKind,this.props.RoomColor,this.props.Products)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className='App'>\r\n                \r\n            <Link to='/Room'><button onClick={this.onClickRoom} style={{backgroundColor:this.props.RoomColor}}>\r\n                {this.props.RoomName}{this.props.RoomKind}</button></Link>\r\n\r\n                <button onClick={this.del}>del</button>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n{/* {this.props.AddRoomS.map((element, i) => {\r\n\r\n                    return <div>\r\n                    \r\n                        <Link to='/Room'><button onClick={() => {\r\n                            this.props.onClickRoom(element.RoomName, element.RoomKind, element.RoomColor)\r\n                        }} style={{ backgroundColor: element.RoomColor }}>{i + 1} : {element.RoomName}{element.RoomKind}</button></Link>\r\n\r\n                    </div>\r\n                })}\r\n                                        <button onClick={this.del}>del</button> */}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Room extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Display:'none',\r\n            Products:[]\r\n        }\r\n    }\r\n\r\n    validSelect = (element)=>{\r\n        this.setState({...this.state,selectProduct:element.target.value});\r\n         \r\n    }\r\n    \r\n\r\n    addItem = () =>{\r\n        this.setState({...this.state,Display:'inline',Display2:'none'});\r\n    }\r\n\r\n\r\n    styleBtn = () =>{\r\n        if(this.state.Display == 'none'){\r\n            this.setState({...this.state,Display2:'inline'})\r\n        } else if(this.state.Display == 'inline'){\r\n            this.setState({...this.state,Display2:'none'})\r\n        }\r\n    }\r\n\r\n\r\n    add = () => {\r\n        this.setState({Products:this.state.Products,Display:'none',Display2:'inline'});\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        this.setState({AddRoomS:this.props.AddRoomS})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                                    {this.state.Products}\r\n\r\n                <h5> {this.props.AddRoomS[0].RoomName} </h5>\r\n               <h5> {this.props.AddRoomS[0].RoomKind} </h5>\r\n\r\n                    <button onClick={()=>{\r\n                        this.state.Products= 'topppp'\r\n                    }}></button> \r\n               <br></br>\r\n\r\n               <h4>Products:</h4>\r\n               <br></br>\r\n               <h5> {this.state.Products.map((element,i)=>{\r\n                   return <div>\r\n                      <p>{i+1} {this.state.Products[i]}</p>\r\n                   </div>\r\n               })}</h5>\r\n\r\n                <button style={{display:this.state.Display2}} onClick={this.addItem} >add item</button>\r\n                <Link to =\"/HomePage\"><button style={{display:this.state.Display,outline:'0'}}  onClick={this.add} >add </button> </Link>\r\n                <select onChange={this.validSelect} style={{display:this.state.Display}}>\r\n\r\n                    <option> Stereo </option>\r\n                    <option> Boiler </option>\r\n                    <option> Air </option>\r\n                    <option> Lab </option>\r\n\r\n                </select>\r\n                <br/>\r\n                <br/>\r\n                <h5> {this.props.AddRoomS[0].Products} </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Room from './Room'\r\n\r\nexport default class AddRoom extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            RoomName:'',\r\n            RoomColor:'',\r\n            RoomKind:''\r\n        }\r\n    }\r\n\r\n    validRoomName = (element)=>{\r\n        this.setState({RoomName:element.target.value});            \r\n    }\r\n\r\n    validRoomColor = (element)=>{\r\n        this.setState({RoomColor:element.target.value});\r\n    }\r\n\r\n    validRoomKind = (element)=>{\r\n        this.setState({RoomKind:element.target.value});\r\n    }\r\n\r\n    add = () => {\r\n\r\n        this.props.create(this.state.RoomName,this.state.RoomKind, this.state.RoomColor);\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n\r\n                <select onChange={this.validRoomKind}>\r\n                    <option>select room</option>\r\n                    <option>BadRoom</option>\r\n                    <option>BathRoom</option>\r\n                    <option>Kcichen</option>\r\n                </select>\r\n                <br/>\r\n                <input onChange={this.validRoomName} placeholder='Room Name'></input>\r\n                <br/>\r\n                <input onChange={this.validRoomColor} placeholder='Room Color'></input>\r\n                <Link to='/HomePage'><button onClick={this.add}>Create</button></Link>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport HomePage from './Components/HomePage'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddRoom from './Components/AddRoom'\nimport Room from './Components/Room'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default class App extends Component {\n\n  state = {\n    roomOnClick: {\n    },\n    index: 0,\n    AddRoomS: [\n      { RoomName: 'shimon', RoomKind: 'badroom', RoomColor: 'green',Products:['mazgan']},\n      { RoomName: 'daniel', RoomKind: 'malka', RoomColor: 'red' },\n\n    ],\n  }\n\n  // addProducts =(i) => {\n  //   let delBtn = this.state.AddRoomS.filter((ele, ind) => (ind != i));\n\n  //   this.setState({AddRoomS: [{\n  //       RoomName: RoomName,\n  //       RoomKind: RoomKind,\n  //       RoomColor: RoomColor,\n  //       Products:Products,\n  //       Display: 'none',\n  //     },...delBtn]\n  //   });\n  // }  \n  \n\n  delRoom = (i) => {\n    let delBtn = this.state.AddRoomS.filter((ele, ind) => (ind != i));\n    this.setState({ AddRoomS: [...delBtn] });\n  }\n\n  onClickRoom = (i,RoomName, RoomKind, RoomColor,Products) => {\n    let delBtn = this.state.AddRoomS.filter((ele, ind) => (ind != i));\n\n    this.setState({AddRoomS: [{\n        RoomName: RoomName,\n        RoomKind: RoomKind,\n        RoomColor: RoomColor,\n        Products:Products,\n        Display: 'none',\n      },...delBtn]\n    });\n  }\n\n\n  // onClickRoom = (RoomName, RoomKind, RoomColor) => {\n\n  //   this.setState({\n  //     RoomName: {\n  //       RoomName: RoomName,\n  //       RoomKind: RoomKind,\n  //       RoomColor: RoomColor,\n  //       Display: 'none',\n  //     }, ...this.state.AddRoomS\n  //   })\n\n  // }\n  newRoom = (RoomName, RoomKind, RoomColor) => {\n\n    this.setState({ AddRoomS: [{ RoomName: RoomName, RoomKind: RoomKind, RoomColor: RoomColor }, ...this.state.AddRoomS] })\n    // this.setState({AddRoomS:[RoomName={ RoomName: RoomName, RoomKind: RoomKind, RoomColor:RoomColor }]})\n\n  }\n\n\n\n  render() {\n\n    return (\n      <div >\n        \n        <Router>\n        <h1 className='App'>Smart House</h1>\n          <br />\n          <br />        \n          <Switch>\n\n            <Route exact path='/HomePage' component={() => {\n              return  <div>\n                 <p className='App'><Link className='App' to='/AddRoom'>Add Room <button>+</button> </Link></p>\n               {this.state.AddRoomS.map((element, i) => {\n               return <HomePage RoomName={element.RoomName} AddRoomS={this.state.AddRoomS} RoomKind={element.RoomKind} RoomColor={element.RoomColor}\n              del={this.delRoom} index={i} create={this.newRoom} onClickRoom={this.onClickRoom} Products={element.Products}>\n            </HomePage> \n          })}\n           </div>\n            }}></Route>\n\n\n            <Route exact path='/AddRoom' component={() => {\n              return <div>\n                <AddRoom AddRoomS={this.state.AddRoomS} RoomKind={this.state.AddRoomS.RoomKind} RoomName={this.state.AddRoomS.RoomName}\n                  RoomColor={this.state.AddRoomS.RoomColor} create={this.newRoom}\n                />\n              </div>\n            }}></Route>\n\n\n            <Route exact path='/Room' component={() => { return <Room AddRoomS={this.state.AddRoomS} roomOnClick={this.state.roomOnClick} /> }}></Route>\n\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}